/**
 * inversify-logger-middleware v.1.0.0-alpha.1 - A basic logger middleware for InversifyJS
 * Copyright (c) 2015 Remo H. Jansen <remo.jansen@wolksoftware.com> (http://www.remojansen.com)
 * MIT inversify.io/LICENSE
 * https://github.com/inversify/inversify-logger-middleware#readme
 */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,n.inversifyLoggerMidleware=e()}}(function(){return function e(n,r,t){function i(f,u){if(!r[f]){if(!n[f]){var d="function"==typeof require&&require;if(!u&&d)return d(f,!0);if(o)return o(f,!0);var a=new Error("Cannot find module '"+f+"'");throw a.code="MODULE_NOT_FOUND",a}var c=r[f]={exports:{}};n[f][0].call(c.exports,function(e){var r=n[f][1][e];return i(r?r:e)},c,c.exports,e,n,r,t)}return r[f].exports}for(var o="function"==typeof require&&require,f=0;f<t.length;f++)i(t[f]);return i}({1:[function(e,n,r){"use strict";function t(e){console.log(e)}function i(e,n){var r=function(r){return function(i){void 0===e&&(e=f),void 0===n&&(n=t);var u=r(i);return console.log(o),u}};return r}var o={a:"├──",b:"└──",c:"│",d:""},f={request:{bindings:{activated:!1,cache:!1,constraint:!1,dynamicValue:!1,factory:!1,implementationType:!1,onActivation:!1,provider:!1,scope:!1,serviceIdentifier:!1,type:!1},result:!1,serviceIdentifier:!1,target:{metadata:!1,name:!1,serviceIdentifier:!1}}};Object.defineProperty(r,"__esModule",{value:!0}),r["default"]=i},{}]},{},[1])(1)});
//# sourceMappingURL=index.min.js.map
