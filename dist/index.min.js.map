{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/ansi-regex/index.js","index.min.js","node_modules/ansi-styles/index.js","node_modules/chalk/index.js","node_modules/escape-string-regexp/index.js","node_modules/has-ansi/index.js","node_modules/process/browser.js","node_modules/strip-ansi/index.js","node_modules/supports-color/index.js","src/binding_logger.ts","src/constants.ts","src/default_renderer.ts","src/default_settings.ts","src/index.ts","src/request_logger.ts","src/target_logger.ts","src/utils.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","inversifyLoggerMidleware","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","2","assembleStyles","styles","modifiers","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","colors","black","red","green","yellow","blue","magenta","cyan","white","gray","bgColors","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","grey","Object","keys","forEach","groupName","group","styleName","style","open","close","defineProperty","value","enumerable","get","3","process","Chalk","options","enabled","undefined","supportsColor","build","_styles","builder","applyStyle","apply","arguments","__proto__","proto","args","argsLen","str","String","nestedStyles","originalDim","ansiStyles","isSimpleWindowsTerm","indexOf","replace","closeRe","init","ret","name","escapeStringRegexp","stripAnsi","hasAnsi","defineProps","defineProperties","platform","test","env","TERM","key","RegExp","concat","prototype","hasColor","stripColor","_process","ansi-styles","escape-string-regexp","has-ansi","strip-ansi","supports-color","4","matchOperatorsRe","TypeError","5","ansiRegex","re","source","bind","ansi-regex","6","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","nextTick","Array","push","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","7","8","terminator","hasFlag","flag","pos","stdout","isTTY","9","getBindingLogEntry","log","index","indentationForDepth","constants_1","tree","item","request","bindings","activated","indentation","cache","constraint","dynamicValue","factory","implementationType","name_1","onActivation","provider","scope","serviceIdentifier","type","./constants","10","11","consoleRenderer","out","console","12","deatultOptions","target","metadata","time","13","makeLoggerMiddleware","settings","renderer","logger","next","context","default_settings_1","default_renderer_1","start","utils_1","getTime","result","end","request_logger_1","plan","rootRequest","getTimeDiference","./default_renderer","./default_settings","./request_logger","./utils","14","getRequestLogEntry","depth","getIndentationForDepth","binding_logger_1","target_logger_1","childRequests","childRequest","./binding_logger","./target_logger","15","getTargetLogEntry","m","16","performance","now","nanoseconds","hrtime","milliseconds","Date","diff","formatted","toFixed","chalk"],"mappings":"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","file":"index.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.inversifyLoggerMidleware = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nfunction assembleStyles () {\n\tvar styles = {\n\t\tmodifiers: {\n\t\t\treset: [0, 0],\n\t\t\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolors: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39]\n\t\t},\n\t\tbgColors: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49]\n\t\t}\n\t};\n\n\t// fix humans\n\tstyles.colors.grey = styles.colors.gray;\n\n\tObject.keys(styles).forEach(function (groupName) {\n\t\tvar group = styles[groupName];\n\n\t\tObject.keys(group).forEach(function (styleName) {\n\t\t\tvar style = group[styleName];\n\n\t\t\tstyles[styleName] = group[styleName] = {\n\t\t\t\topen: '\\u001b[' + style[0] + 'm',\n\t\t\t\tclose: '\\u001b[' + style[1] + 'm'\n\t\t\t};\n\t\t});\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t});\n\n\treturn styles;\n}\n\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n\n},{}],3:[function(require,module,exports){\n(function (process){\n'use strict';\nvar escapeStringRegexp = require('escape-string-regexp');\nvar ansiStyles = require('ansi-styles');\nvar stripAnsi = require('strip-ansi');\nvar hasAnsi = require('has-ansi');\nvar supportsColor = require('supports-color');\nvar defineProps = Object.defineProperties;\nvar isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);\n\nfunction Chalk(options) {\n\t// detect mode if not set manually\n\tthis.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;\n}\n\n// use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001b[94m';\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction build(_styles) {\n\tvar builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder.enabled = this.enabled;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\t/* eslint-disable no-proto */\n\tbuilder.__proto__ = proto;\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || !str) {\n\t\treturn str;\n\t}\n\n\tvar nestedStyles = this._styles;\n\tvar i = nestedStyles.length;\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\twhile (i--) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\t// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, [name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(Chalk.prototype, init());\n\nmodule.exports = new Chalk();\nmodule.exports.styles = ansiStyles;\nmodule.exports.hasColor = hasAnsi;\nmodule.exports.stripColor = stripAnsi;\nmodule.exports.supportsColor = supportsColor;\n\n}).call(this,require('_process'))\n\n},{\"_process\":6,\"ansi-styles\":2,\"escape-string-regexp\":4,\"has-ansi\":5,\"strip-ansi\":7,\"supports-color\":8}],4:[function(require,module,exports){\n'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\n},{}],5:[function(require,module,exports){\n'use strict';\nvar ansiRegex = require('ansi-regex');\nvar re = new RegExp(ansiRegex().source); // remove the `g` flag\nmodule.exports = re.test.bind(re);\n\n},{\"ansi-regex\":1}],6:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],7:[function(require,module,exports){\n'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n\n},{\"ansi-regex\":1}],8:[function(require,module,exports){\n(function (process){\n'use strict';\nvar argv = process.argv;\n\nvar terminator = argv.indexOf('--');\nvar hasFlag = function (flag) {\n\tflag = '--' + flag;\n\tvar pos = argv.indexOf(flag);\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\n};\n\nmodule.exports = (function () {\n\tif ('FORCE_COLOR' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n\n}).call(this,require('_process'))\n\n},{\"_process\":6}],9:[function(require,module,exports){\n\"use strict\";\r\nvar constants_1 = require(\"./constants\");\r\nfunction getBindingLogEntry(log, options, index, binding, indentationForDepth) {\r\n    log = \"\" + log + indentationForDepth + constants_1.tree.item + \" item:\" + index + \"\\n\";\r\n    if (options.request.bindings.activated) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" activated: \" + binding.activated + \"\\n\";\r\n    }\r\n    if (options.request.bindings.cache) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" cache: \" + binding.cache + \"\\n\";\r\n    }\r\n    if (options.request.bindings.constraint) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" constraint: \" + binding.constraint + \"\\n\";\r\n    }\r\n    if (options.request.bindings.dynamicValue) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" dynamicValue: \" + binding.dynamicValue + \"\\n\";\r\n    }\r\n    if (options.request.bindings.factory) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" factory: \" + binding.factory + \"\\n\";\r\n    }\r\n    if (options.request.bindings.implementationType) {\r\n        var name_1 = (binding.implementationType) ? binding.implementationType.name : undefined;\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" implementationType: \" + name_1 + \"\\n\";\r\n    }\r\n    if (options.request.bindings.onActivation) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" onActivation: \" + binding.onActivation + \"\\n\";\r\n    }\r\n    if (options.request.bindings.provider) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" provider: \" + binding.provider + \"\\n\";\r\n    }\r\n    if (options.request.bindings.scope) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" scope: \" + binding.scope + \"\\n\";\r\n    }\r\n    if (options.request.bindings.serviceIdentifier) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" serviceIdentifier: \" + binding.serviceIdentifier + \"\\n\";\r\n    }\r\n    if (options.request.bindings.type) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" type: \" + binding.type + \"\\n\";\r\n    }\r\n    return log;\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = getBindingLogEntry;\r\n},{\"./constants\":10}],10:[function(require,module,exports){\n\"use strict\";\r\nvar tree = {\r\n    item: \"└──\"\r\n};\r\nexports.tree = tree;\r\nvar indentation = \"    \";\r\nexports.indentation = indentation;\r\n},{}],11:[function(require,module,exports){\n\"use strict\";\r\nfunction consoleRenderer(out) {\r\n    console.log(out);\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = consoleRenderer;\r\n},{}],12:[function(require,module,exports){\n\"use strict\";\r\nvar deatultOptions = {\r\n    request: {\r\n        bindings: {\r\n            activated: true,\r\n            cache: true,\r\n            constraint: false,\r\n            dynamicValue: true,\r\n            factory: true,\r\n            implementationType: true,\r\n            onActivation: true,\r\n            provider: true,\r\n            scope: true,\r\n            serviceIdentifier: true,\r\n            type: true\r\n        },\r\n        serviceIdentifier: true,\r\n        target: {\r\n            metadata: true,\r\n            name: true,\r\n            serviceIdentifier: true\r\n        }\r\n    },\r\n    time: true,\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = deatultOptions;\r\n},{}],13:[function(require,module,exports){\n\"use strict\";\r\nvar default_settings_1 = require(\"./default_settings\");\r\nvar default_renderer_1 = require(\"./default_renderer\");\r\nvar constants_1 = require(\"./constants\");\r\nvar request_logger_1 = require(\"./request_logger\");\r\nvar utils_1 = require(\"./utils\");\r\nfunction makeLoggerMiddleware(settings, renderer) {\r\n    var logger = function (next) {\r\n        return function (context) {\r\n            if (settings === undefined) {\r\n                settings = default_settings_1.default;\r\n            }\r\n            ;\r\n            if (renderer === undefined) {\r\n                renderer = default_renderer_1.default;\r\n            }\r\n            ;\r\n            var start = utils_1.getTime();\r\n            var result = next(context);\r\n            var end = utils_1.getTime();\r\n            var log = request_logger_1.default(constants_1.tree.item + \" plan\\n\", settings, context.plan.rootRequest, 0, 0);\r\n            if (settings.time) {\r\n                log = log + \"\\n Time: \" + utils_1.getTimeDiference(start, end) + \" millisecond/s.\\n\";\r\n            }\r\n            renderer(log);\r\n            return result;\r\n        };\r\n    };\r\n    return logger;\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = makeLoggerMiddleware;\r\n},{\"./constants\":10,\"./default_renderer\":11,\"./default_settings\":12,\"./request_logger\":14,\"./utils\":16}],14:[function(require,module,exports){\n\"use strict\";\r\nvar constants_1 = require(\"./constants\");\r\nvar utils_1 = require(\"./utils\");\r\nvar binding_logger_1 = require(\"./binding_logger\");\r\nvar target_logger_1 = require(\"./target_logger\");\r\nfunction getRequestLogEntry(log, options, request, depth, index) {\r\n    var indentationForDepth = utils_1.getIndentationForDepth(depth);\r\n    log = \"\" + log + indentationForDepth + constants_1.tree.item + \" item:\" + index + \"\\n\";\r\n    if (options.request.serviceIdentifier === true) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" serviceIdentifier: \" + request.serviceIdentifier + \"\\n\";\r\n    }\r\n    if (options.request.bindings !== undefined) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" bindings:\\n\";\r\n        request.bindings.forEach(function (binding, i) {\r\n            log = binding_logger_1.default(log, options, i, binding, \"\" + indentationForDepth + constants_1.indentation + constants_1.indentation);\r\n        });\r\n    }\r\n    if (options.request.target !== undefined) {\r\n        log = target_logger_1.default(log, options, request.target, \"\" + indentationForDepth + constants_1.indentation);\r\n    }\r\n    if (request.childRequests.length > 0) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" childRequests:\\n\";\r\n    }\r\n    request.childRequests.forEach(function (childRequest, i) {\r\n        log = getRequestLogEntry(log, options, childRequest, (depth + 2), i);\r\n    });\r\n    return log;\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = getRequestLogEntry;\r\n},{\"./binding_logger\":9,\"./constants\":10,\"./target_logger\":15,\"./utils\":16}],15:[function(require,module,exports){\n\"use strict\";\r\nvar constants_1 = require(\"./constants\");\r\nvar utils_1 = require(\"./utils\");\r\nfunction getTargetLogEntry(log, options, target, indentationForDepth) {\r\n    log = \"\" + log + indentationForDepth + constants_1.tree.item + \" target\\n\";\r\n    if (options.request.target.name) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" name: \" + (target.name.value() || \"undefined\") + \"\\n\";\r\n    }\r\n    if (options.request.target.serviceIdentifier) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" serviceIdentifier: \" + target.serviceIdentifier + \"\\n\";\r\n    }\r\n    if (options.request.target.metadata) {\r\n        log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.tree.item + \" \" + utils_1.cyan(\"metadata\") + \"\\n\";\r\n        target.metadata.forEach(function (m, i) {\r\n            log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.indentation + constants_1.tree.item + \" item:\" + i + \"\\n\";\r\n            log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.indentation + constants_1.indentation + constants_1.tree.item + \" key: \" + m.key + \"\\n\";\r\n            log = \"\" + log + indentationForDepth + constants_1.indentation + constants_1.indentation + constants_1.indentation + constants_1.tree.item + \" value: \" + m.value + \"\\n\";\r\n        });\r\n    }\r\n    return log;\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = getTargetLogEntry;\r\n},{\"./constants\":10,\"./utils\":16}],16:[function(require,module,exports){\n(function (process){\n\"use strict\";\r\nvar constants_1 = require(\"./constants\");\r\nvar chalk = require(\"chalk\");\r\nvar cyan = chalk.cyan;\r\nexports.cyan = cyan;\r\nvar yellow = chalk.yellow;\r\nexports.yellow = yellow;\r\nfunction getIndentationForDepth(depth) {\r\n    var indentationForDepth = constants_1.indentation;\r\n    for (var i = depth; i--; i >= 0) {\r\n        indentationForDepth = \"\" + indentationForDepth + constants_1.indentation;\r\n    }\r\n    return indentationForDepth;\r\n}\r\nexports.getIndentationForDepth = getIndentationForDepth;\r\nfunction getTime() {\r\n    if (typeof window !== \"undefined\") {\r\n        return window.performance.now();\r\n    }\r\n    else if (typeof process !== \"undefined\") {\r\n        var nanoseconds = process.hrtime()[1];\r\n        var milliseconds = nanoseconds / 1000000;\r\n        return milliseconds;\r\n    }\r\n    else {\r\n        return new Date().getTime();\r\n    }\r\n}\r\nexports.getTime = getTime;\r\nfunction getTimeDiference(start, end) {\r\n    var diff = end - start;\r\n    var formatted = diff.toFixed(2);\r\n    return formatted;\r\n}\r\nexports.getTimeDiference = getTimeDiference;\r\n}).call(this,require('_process'))\n\n},{\"./constants\":10,\"_process\":6,\"chalk\":3}]},{},[13])(13)\n});\n\n","'use strict';\n\nfunction assembleStyles () {\n\tvar styles = {\n\t\tmodifiers: {\n\t\t\treset: [0, 0],\n\t\t\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolors: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39]\n\t\t},\n\t\tbgColors: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49]\n\t\t}\n\t};\n\n\t// fix humans\n\tstyles.colors.grey = styles.colors.gray;\n\n\tObject.keys(styles).forEach(function (groupName) {\n\t\tvar group = styles[groupName];\n\n\t\tObject.keys(group).forEach(function (styleName) {\n\t\t\tvar style = group[styleName];\n\n\t\t\tstyles[styleName] = group[styleName] = {\n\t\t\t\topen: '\\u001b[' + style[0] + 'm',\n\t\t\t\tclose: '\\u001b[' + style[1] + 'm'\n\t\t\t};\n\t\t});\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t});\n\n\treturn styles;\n}\n\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\nvar escapeStringRegexp = require('escape-string-regexp');\nvar ansiStyles = require('ansi-styles');\nvar stripAnsi = require('strip-ansi');\nvar hasAnsi = require('has-ansi');\nvar supportsColor = require('supports-color');\nvar defineProps = Object.defineProperties;\nvar isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);\n\nfunction Chalk(options) {\n\t// detect mode if not set manually\n\tthis.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;\n}\n\n// use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001b[94m';\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction build(_styles) {\n\tvar builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder.enabled = this.enabled;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\t/* eslint-disable no-proto */\n\tbuilder.__proto__ = proto;\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || !str) {\n\t\treturn str;\n\t}\n\n\tvar nestedStyles = this._styles;\n\tvar i = nestedStyles.length;\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\twhile (i--) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\t// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, [name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(Chalk.prototype, init());\n\nmodule.exports = new Chalk();\nmodule.exports.styles = ansiStyles;\nmodule.exports.hasColor = hasAnsi;\nmodule.exports.stripColor = stripAnsi;\nmodule.exports.supportsColor = supportsColor;\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict';\nvar ansiRegex = require('ansi-regex');\nvar re = new RegExp(ansiRegex().source); // remove the `g` flag\nmodule.exports = re.test.bind(re);\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n","'use strict';\nvar argv = process.argv;\n\nvar terminator = argv.indexOf('--');\nvar hasFlag = function (flag) {\n\tflag = '--' + flag;\n\tvar pos = argv.indexOf(flag);\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\n};\n\nmodule.exports = (function () {\n\tif ('FORCE_COLOR' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { tree, indentation } from \"./constants\";\r\n\r\nfunction getBindingLogEntry(\r\n    log: string,\r\n    options: ILoggerSettings,\r\n    index: number,\r\n    binding: inversify.IBinding<any>,\r\n    indentationForDepth: string\r\n) {\r\n\r\n    log = `${log}${indentationForDepth}${tree.item} item:${index}\\n`;\r\n\r\n    if (options.request.bindings.activated) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} activated: ${binding.activated}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.cache) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} cache: ${binding.cache}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.constraint) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} constraint: ${binding.constraint}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.dynamicValue) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} dynamicValue: ${binding.dynamicValue}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.factory) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} factory: ${binding.factory}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.implementationType) {\r\n        let name = (binding.implementationType) ? (<any>binding.implementationType).name : undefined;\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} implementationType: ${name}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.onActivation) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} onActivation: ${binding.onActivation}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.provider) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} provider: ${binding.provider}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.scope) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} scope: ${binding.scope}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.serviceIdentifier) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} serviceIdentifier: ${binding.serviceIdentifier}\\n`;\r\n    }\r\n\r\n    if (options.request.bindings.type) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} type: ${binding.type}\\n`;\r\n    }\r\n\r\n    return log;\r\n\r\n}\r\n\r\nexport default getBindingLogEntry;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nlet tree = {\r\n    item: \"└──\"\r\n};\r\n\r\nlet indentation  = \"    \";\r\n\r\nexport { tree, indentation };\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nfunction consoleRenderer(out: string) {\r\n    console.log(out);\r\n}\r\n\r\nexport default consoleRenderer;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nlet deatultOptions: ILoggerSettings = {\r\n    request: {\r\n        bindings: {\r\n            activated: true,\r\n            cache: true,\r\n            constraint: false,\r\n            dynamicValue: true,\r\n            factory: true,\r\n            implementationType: true,\r\n            onActivation: true,\r\n            provider: true,\r\n            scope: true,\r\n            serviceIdentifier: true,\r\n            type: true\r\n        },\r\n        serviceIdentifier: true,\r\n        target: {\r\n            metadata: true,\r\n            name: true,\r\n            serviceIdentifier: true\r\n        }\r\n    },\r\n    time: true,\r\n};\r\n\r\nexport default deatultOptions;\r\n","/// <reference path=\"./interfaces.d.ts\" />\n\nimport deatultOptions from \"./default_settings\";\nimport consoleRenderer from \"./default_renderer\";\nimport { tree } from \"./constants\";\nimport getRequestLogEntry from \"./request_logger\";\nimport { getTime, getTimeDiference } from \"./utils\";\n\nfunction makeLoggerMiddleware(settings?: ILoggerSettings, renderer?: (out: string) => void) {\n\n    let logger = function (next: (context: inversify.IContext) => any) {\n        return function (context: inversify.IContext) {\n\n            if (settings === undefined) { settings = deatultOptions; };\n            if (renderer === undefined) { renderer = consoleRenderer; };\n\n            let start =  getTime();\n            let result = next(context);\n            let end = getTime();\n            let log = getRequestLogEntry(`${tree.item} plan\\n`, settings, context.plan.rootRequest, 0, 0);\n\n            if (settings.time) {\n                log = `${log}\\n Time: ${getTimeDiference(start, end)} millisecond/s.\\n`;\n            }\n\n            renderer(log);\n            return result;\n\n        };\n    };\n\n    return logger;\n\n}\n\nexport default makeLoggerMiddleware;\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { tree, indentation } from \"./constants\";\r\nimport { getIndentationForDepth } from \"./utils\";\r\nimport getBindingLogEntry from \"./binding_logger\";\r\nimport getTargetLogEntry from \"./target_logger\";\r\n\r\nfunction getRequestLogEntry(\r\n    log: string,\r\n    options: ILoggerSettings,\r\n    request: inversify.IRequest,\r\n    depth: number,\r\n    index: number\r\n): string {\r\n\r\n    let indentationForDepth = getIndentationForDepth(depth);\r\n\r\n    log = `${log}${indentationForDepth}${tree.item} item:${index}\\n`;\r\n\r\n    if (options.request.serviceIdentifier === true) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} serviceIdentifier: ${request.serviceIdentifier}\\n`;\r\n    }\r\n\r\n    // bindings\r\n    if (options.request.bindings !== undefined) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} bindings:\\n`;\r\n        request.bindings.forEach((binding: inversify.IBinding<any>, i: number) => {\r\n            log = getBindingLogEntry(log, options, i, binding, `${indentationForDepth}${indentation}${indentation}`);\r\n        });\r\n    }\r\n\r\n    // target\r\n    if (options.request.target !== undefined) {\r\n        log = getTargetLogEntry(log, options, request.target, `${indentationForDepth}${indentation}`);\r\n    }\r\n\r\n    // child requests\r\n    if (request.childRequests.length > 0) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} childRequests:\\n`;\r\n    }\r\n\r\n    request.childRequests.forEach((childRequest, i) => {\r\n        log = getRequestLogEntry(log, options, childRequest, (depth + 2), i);\r\n    });\r\n\r\n    return log;\r\n\r\n}\r\n\r\nexport default getRequestLogEntry;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { tree, indentation } from \"./constants\";\r\nimport { cyan } from \"./utils\";\r\n\r\nfunction getTargetLogEntry(\r\n    log: string,\r\n    options: ILoggerSettings,\r\n    target: inversify.ITarget,\r\n    indentationForDepth: string\r\n) {\r\n\r\n    log = `${log}${indentationForDepth}${tree.item} target\\n`;\r\n\r\n    if (options.request.target.name) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} name: ${target.name.value() || \"undefined\"}\\n`;\r\n    }\r\n\r\n    if (options.request.target.serviceIdentifier) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} serviceIdentifier: ${target.serviceIdentifier}\\n`;\r\n    }\r\n\r\n    if (options.request.target.metadata) {\r\n        log = `${log}${indentationForDepth}${indentation}${tree.item} ${cyan(\"metadata\")}\\n`;\r\n        target.metadata.forEach((m: inversify.IMetadata, i: number) => {\r\n            log = `${log}${indentationForDepth}${indentation}${indentation}${tree.item} item:${i}\\n`;\r\n            log = `${log}${indentationForDepth}${indentation}${indentation}${indentation}${tree.item} key: ${m.key}\\n`;\r\n            log = `${log}${indentationForDepth}${indentation}${indentation}${indentation}${tree.item} value: ${m.value}\\n`;\r\n        });\r\n    }\r\n\r\n    return log;\r\n\r\n}\r\n\r\nexport default getTargetLogEntry;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { indentation } from \"./constants\";\r\nimport * as chalk from \"chalk\";\r\n\r\nlet cyan = chalk.cyan;\r\nlet yellow  = chalk.yellow;\r\n\r\ndeclare var process: any;\r\ndeclare var window: any;\r\n\r\nfunction getIndentationForDepth(depth: number) {\r\n    let indentationForDepth = indentation;\r\n    for (let i = depth; i--; i >= 0) {\r\n        indentationForDepth = `${indentationForDepth}${indentation}`;\r\n    }\r\n    return indentationForDepth;\r\n}\r\n\r\nfunction getTime() {\r\n\r\n    if (typeof window !== \"undefined\") {\r\n\r\n        // modern browsers\r\n        return window.performance.now();\r\n\r\n    } else if (typeof process !== \"undefined\") {\r\n\r\n        // node\r\n        let nanoseconds = process.hrtime()[1];\r\n        let milliseconds = nanoseconds / 1000000;\r\n        return milliseconds;\r\n\r\n    } else {\r\n\r\n        // old browsers\r\n        return new Date().getTime();\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction getTimeDiference( start: number, end: number) {\r\n    let diff = end - start;\r\n    let formatted = diff.toFixed(2);\r\n    return formatted;\r\n}\r\n\r\nexport { getIndentationForDepth, getTime, getTimeDiference, cyan, yellow };\r\n"],"sourceRoot":"/source/"}